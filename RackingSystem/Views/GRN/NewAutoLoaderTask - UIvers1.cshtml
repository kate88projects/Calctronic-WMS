
@{
}

<style type="text/css">
    body {
        color: #566787;
        background: #f5f5f5;
        /* font-family: 'Varela Round', sans-serif; */
        /* font-size: 13px; */
    }

    .table-wrapper {
        background: #fff;
        padding: 20px 25px;
        margin: 30px auto;
        border-radius: 3px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
    }

    /*  .table-wrapper .btn {
                float: right;
                color: #333;
                background-color: #fff;
                border-radius: 3px;
                border: none;
                outline: none !important;
                margin-left: 10px;
            }

                .table-wrapper .btn:hover {
                    color: #333;
                    background: #f2f2f2;
                }

                .table-wrapper .btn.btn-primary {
                    color: #fff;
                    background: #03A9F4;
                }

                    .table-wrapper .btn.btn-primary:hover {
                        background: #03a3e7;
                    } */

    /* .table-title .btn { */
    /*     font-size: 17px; */
    /*     border: none; */
    /* } */

    /* .table-title .btn i { */
    /*     float: left; */
    /*     font-size: 21px; */
    /*     margin-right: 5px; */
    /* } */

    /* .table-title .btn span { */
    /*     float: left; */
    /*     margin-top: 2px; */
    /*     height: 21px; */
    /* } */

    .table-title {
        color: #fff;
        background: #4b5366;
        padding: 16px 25px;
        margin: -20px -25px 10px;
        border-radius: 3px 3px 0 0;
    }

        .table-title h2 {
            margin: 5px 0 0;
            font-size: 24px;
        }

    .show-entries select.form-control {
        width: 60px;
        margin: 0 5px;
    }

    .table-filter .filter-group {
        float: right;
        margin-left: 15px;
    }

    .table-filter input, .table-filter select {
        height: 34px;
        border-radius: 3px;
        border-color: #ddd;
        box-shadow: none;
    }

    .table-filter {
        padding: 5px 0 15px;
        border-bottom: 1px solid #e9e9e9;
        margin-bottom: 5px;
    }

        .table-filter .btn {
            height: 34px;
        }

        .table-filter label {
            font-weight: normal;
            margin-left: 10px;
        }

        .table-filter select, .table-filter input {
            display: inline-block;
            margin-left: 5px;
        }

        .table-filter input {
            width: 200px;
            display: inline-block;
        }

    .filter-group select.form-control {
        width: 110px;
    }

    .filter-icon {
        float: right;
        margin-top: 7px;
    }

        .filter-icon i {
            font-size: 18px;
            opacity: 0.7;
        }

    table.table tr th, table.table tr td {
        border-color: #e9e9e9;
        padding: 12px 15px;
        vertical-align: middle;
    }

    /*  table.table tr th:first-child {
                width: 150px;
            }

            table.table tr th:last-child {
                width: 80px;
            } */

    table.table-striped tbody tr:nth-of-type(odd) {
        background-color: #fcfcfc;
    }

    table.table-striped.table-hover tbody tr:hover {
        background: #f5f5f5;
    }

    table.table th i {
        font-size: 13px;
        margin: 0 5px;
        cursor: pointer;
    }

    table.table td a {
        font-weight: bold;
        color: #566787;
        display: inline-block;
        text-decoration: none;
    }

        table.table td a:hover {
            color: #2196F3;
        }

        table.table td a.view {
            width: 30px;
            height: 30px;
            color: #2196F3;
            border: 2px solid;
            border-radius: 30px;
            text-align: center;
        }

            table.table td a.view i {
                font-size: 22px;
                margin: 2px 0 0 1px;
            }

    table.table .avatar {
        border-radius: 50%;
        vertical-align: middle;
        margin-right: 10px;
    }

    .status {
        font-size: 30px;
        margin: 2px 2px 0 0;
        display: inline-block;
        vertical-align: middle;
        line-height: 10px;
    }

    .text-success {
        color: #10c469;
    }

    .text-info {
        color: #62c9e8;
    }

    .text-warning {
        color: #FFC107;
    }

    .text-danger {
        color: #ff5b5b;
    }

    .pagination {
        float: right;
        margin: 0 0 5px;
    }

        .pagination li a {
            border: none;
            font-size: 13px;
            min-width: 30px;
            min-height: 30px;
            color: #999;
            margin: 0 2px;
            line-height: 30px;
            border-radius: 2px !important;
            text-align: center;
            padding: 0 6px;
        }

            .pagination li a:hover {
                color: #666;
            }

        .pagination li.active a {
            background: #03A9F4;
        }

            .pagination li.active a:hover {
                background: #0397d6;
            }

        .pagination li.disabled i {
            color: #ccc;
        }

        .pagination li i {
            font-size: 16px;
            padding-top: 6px
        }

    .hint-text {
        float: left;
        margin-top: 10px;
        font-size: 13px;
    }

    div.dt-buttons {
        float: right;
    }



    .panel-focus {
        background-color: #198754 !important;
    }

    .panel {
        background-color: #6c757d !important;
    }

    .panel-dtl-focus {
        background-color: white !important;
    }

        .panel-dtl-focus span {
            color: black;
            background-color: #white;
        }

        .panel-dtl-focus div.timeline-body {
            color: black;
            background-color: white;
        }

        .panel-dtl-focus div.timeline-footer {
            color: black;
            background-color: #white;
        }

    .panel-dtl {
        background-color: #e9ecef !important;
    }

        .panel-dtl span {
            color: grey;
            background-color: #e9ecef;
        }

        .panel-dtl div.timeline-body {
            color: grey;
            background-color: #e9ecef;
        }

        .panel-dtl div.timeline-footer {
            color: grey;
            background-color: #e9ecef;
        }

    .titleDisable {
        background-color: #e9ecef !important;
    }

        .titleDisable span {
            background-color: #e9ecef !important;
            color: darkgray;
        }

    .bodyDisable i {
        background-color: darkgreen !important;
    }

    .bodyDisable div.timeline-body {
        color: grey;
        background-color: #e9ecef;
    }

    .bodyDisable div.timeline-footer {
        color: grey;
        background-color: #e9ecef;
    }

    .error-message {
        color: red;
        font-size: 0.875rem;
        margin-top: 5px;
    }

    .is-invalid {
        border-color: red;
    }

    .is-valid {
        border-color: green;
    }

    .hidden {
        display: none;
    }

    .bi-check-all {
        /* margin-top: 5px;
            margin-left: 16px;
            margin-right: 10px;
            font-size: 26px; */
        color: darkgreen;
    }

    .fa-cog {
        /* margin-top: 5px;
            margin-left: 16px;
            margin-right: 10px; */
        /* font-size:20px; */
        color: #198754;
        animation: rotate 3s linear infinite;
    }

    .err .fa-cog {
        color: red;
        animation: rotate 3s linear infinite;
    }

    @@keyframes rotate {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }
</style>

<div class="container-fluid">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-4">
                    <h2>NEW Auto Loader Task <b></b></h2>
                </div>
            </div>
        </div>

        <div class="row" >
            <div class="col-12">
                <input id="txtLoader" type="button" class="form-control" style="" placeholder="Select Loader" onclick="showLoaderForm()" />
            </div>
        </div>

        <hr />

        <div class="row">
            <div class="col-2">
            </div>
            <div class="col-8">
                <div class="card card-success">
                    <div class="card-header " id="pnlPLCH">
                        <h3 class="card-title">Auto Loader</h3>
                    </div>
                    <div class="card-body" id="pnlPLCD">
                        <div class="timeline">
                            @* STEP 1 *@
                            <div class="time-label" id="pnl1_title">
                                <span class="bg-red">STEP 1 :: Check Loader Status ... </span>
                            </div>
                            <div id="pnl1_body">
                                <span id="spin1"><i class="timeline-icon fas fa-cog"></i></span> <i class="timeline-icon bi bi-check-all text-bg-success" id="done1"></i>
                                @* <i class="timeline-icon bi bi-person text-bg-success"></i> *@
                                <div class="timeline-item">
                                    <div class="timeline-body" style="height:50px;">
                                        <p id="pLoader1">
                                            Loader :
                                        </p>
                                    </div>
                                    <div class="timeline-footer" style="border-top:1px solid rgba(0,0,0,.125); min-height:50px;">
                                        <span style="color:red; font-size:15px;" id="err1"> </span>
                                        <button type="button" class="btn btn-block btn-warning" onclick="retry1();" id="btnRetry1">Retry</button>
                                    </div>
                                </div>
                            </div>

                            @* STEP 2 *@
                            <div class="time-label" id="pnl2_title">
                                <span class="bg-red">STEP 2 :: Waiting Scan Reel ... </span>
                            </div>
                            <div id="pnl2_body">
                                <span id="spin2"><i class="timeline-icon fas fa-cog"></i></span> <i class="timeline-icon bi bi-check-all text-bg-success" id="done2"></i>
                                @* <i class="timeline-icon bi bi-info text-bg-success"></i> *@
                                <div class="timeline-item">
                                    <div class="timeline-body" style="height:150px;">
                                        <p id="pItem2">
                                            Item :
                                        </p>
                                        <p id="pReel2">
                                            Reel ID :
                                        </p>
                                        <p id="pHeight2">
                                            Est. Height :
                                        </p>
                                    </div>
                                    <div class="timeline-footer" style="border-top:1px solid rgba(0,0,0,.125); min-height:50px;">
                                        <span style="color:red; font-size:15px;" id="err2"> </span>
                                        <button type="button" class="btn btn-block btn-warning" onclick="retry2();" id="btnRetry2">Retry</button>
                                    </div>
                                </div>
                            </div>

                            @* STEP 3 *@
                            <div class="time-label" id="pnl3_title">
                                <span class="bg-red">STEP 3 :: Checking column available ... </span>
                            </div>
                            <div id="pnl3_body">
                                <span id="spin3"><i class="timeline-icon fas fa-cog"></i></span> <i class="timeline-icon bi bi-check-all text-bg-success" id="done3"></i>
                                @* <i class="timeline-icon bi bi-info text-bg-success"></i> *@
                                <div class="timeline-item">
                                    <div class="timeline-body" style="height:70px;">
                                        <p id="pItem3">
                                            Auto Loader Column : 1
                                        </p>
                                    </div>
                                    <div class="timeline-footer" style="border-top:1px solid rgba(0,0,0,.125); min-height:50px;">
                                        <span style="color:red; font-size:15px;" id="err3"> </span>
                                        <button type="button" class="btn btn-block btn-warning" onclick="retry3();" id="btnRetry3">Retry</button>
                                    </div>
                                </div>
                            </div>

                            @* STEP 4 *@
                            <div class="time-label" id="pnl4_title">
                                <span class="bg-red">STEP 4 :: Reading Reel Info ... </span>
                            </div>
                            <div id="pnl4_body">
                                <span id="spin4"><i class="timeline-icon fas fa-cog"></i></span> <i class="timeline-icon bi bi-check-all text-bg-success" id="done4"></i>
                                @* <i class="timeline-icon bi bi-info text-bg-success"></i> *@
                                <div class="timeline-item">
                                    <div class="timeline-body" style="height:100px;">
                                        <p id="pLoader4">
                                            Auto Loader Column : 1
                                        </p>
                                        <p id="pHeight4">
                                            Actual Height :
                                        </p>
                                    </div>
                                    <div class="timeline-footer" style="border-top:1px solid rgba(0,0,0,.125); min-height:50px;">
                                        <span style="color:red; font-size:15px;" id="err4"> </span>
                                        <button type="button" class="btn btn-block btn-warning" onclick="loadPLC(4);" id="btnRetry4">Retry</button>
                                    </div>
                                </div>
                            </div>

                            @* STEP 5 *@
                            <div class="time-label" id="pnlLast_title">
                                <span class="bg-red">STEP 5 :: Finalizing ... </span>
                            </div>
                            <div id="pnlLast_body">
                                <span id="spinLast"><i class="timeline-icon fas fa-cog"></i></span> <i class="timeline-icon bi bi-check-all text-bg-success" id="doneLast"></i>
                                @* <i class="timeline-icon bi bi-flag text-bg-success"></i> *@
                                <div class="timeline-item">
                                    <div class="timeline-body" style="height:50px;">
                                        <p style="text-align:center;" id="pTextLast">Waiting finish loading reel ...</p>
                                    </div>
                                    <div class="timeline-footer" style="border-top:1px solid rgba(0,0,0,.125);">
                                        @* <span style="color:dimgrey; font-size:15px;">No Error </span> *@
                                        <button type="button" class="btn btn-block btn-warning" onclick="loadPLC(5);" id="btnRetryLast">Retry</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="txtLoaderId">
                        <input type="hidden" id="txtEstHeight">
                        <input type="hidden" id="txtActHeight">
                        <input type="hidden" id="txtReelCode">
                        <input type="hidden" id="txtICol">
                    </div>
                </div>
            </div>
            <div class="col-2">
            </div>
        </div>

    </div>

</div>

<div class="modal fade" id="loaderModal" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body" style="padding: 50px;">
                <br />
                <p class="" style="font-size:32px;">1. Start to Scan Loader ID</p>
                <input id="txtScanLoader" class="form-control form-control-lg" type="text" placeholder="Scan Loader ... ">
                <br />
            </div>
            @* <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="addLoader(1, '','')">Done</button>
                <button type="button" class="btn btn-outline-secondary" onclick="cancelLoaderForm()">Cancel</button>
            </div> *@
        </div>
    </div>
</div>

<div class="modal fade" id="itemModal" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body" style="padding: 50px;">
                <br />
                <p class="" style="font-size:32px;">2. Start to Scan Reel ID</p>
                <input id="txtScanItem" class="form-control form-control-lg" type="text" placeholder="Scan Reel ID ... ">
                <br />
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="putModal" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body" style="padding: 50px;">
                <br />
                <p class="" style="font-size:32px;">3. Please put Reel </p>
                <button type="button" class="btn btn-success" onclick="cont4();" style="height:100px;width:100%;font-size:36px;">Done</button>
                <br />
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <link href="~/css/datatables.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/sweetalert2.min.css">

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/datatables.min.js"></script>
    <script src="~/js/sweetalert2.all.min.js"></script>

    <!-- DataTables Buttons -->
    <script src="https://cdn.datatables.net/buttons/1.6.2/js/dataTables.buttons.min.js"></script>
    <!-- JSZip for Excel/CSV -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <!-- HTML5 Export Buttons -->
    <script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.html5.min.js"></script>

    <script type="text/javascript">

        const scanLoaderEle = document.getElementById('txtScanLoader');

        scanLoaderEle.addEventListener('keyup', function(event) {
          // Check if the pressed key is "Enter" (key code 13 or key property "Enter")
          if (event.key === 'Enter') {

            const inputValue = this.value;
            // alert('Enter key pressed! Value: ');

            var code = inputValue;
            $.ajax({
                url: "/Loader/GetLoaderInfo_ReadyToLoad?req=" + code,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    Swal.fire({
                        text: 'Please Wait',
                        width: '300px',

                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        showConfirmButton: false,
                    });
                    Swal.showLoading()
                },
                success: function (result) {
                    //console.log(result);
                    swal.close();
                    if (result.success == true) {
                        addLoader(0, result.data.loader_Id, result.data.loaderCode);
                    }
                    else {
                        swal.fire({
                            icon: 'error',
                            title: "Wait",
                            text: result.errMessage
                        });
                    }
                },
                error: function (error) {
                    swal.fire({
                        icon: 'error',
                        title: "Wait",
                        text: error.val
                    });
                }
            });
          }
        });

        const scanItemEle = document.getElementById('txtScanItem');

        scanItemEle.addEventListener('keyup', function(event) {
          // Check if the pressed key is "Enter" (key code 13 or key property "Enter")
          if (event.key === 'Enter') {

                const inputValue = this.value;
                // alert('Enter key pressed! Value: ');

                $("#txtReelCode").val(inputValue);
                $("#itemModal").modal("toggle");

                loadPLC(2);
          }
        });

        $(document).ready(function () {
            resetColorPLCForm(0);
            loadLoaderList();

            // direct show loader to let user select
            $("#loaderModal").modal("toggle");

            $("#txtEstHeight").val(0);
            $("#txtActHeight").val(0);
            $("#txtICol").val(1);
        });

        function resetColorPLCForm(idx) {
            $("#pnl1_title").addClass("titleDisable");
            $("#pnl1_body").addClass("bodyDisable");
            $("#pnl2_title").addClass("titleDisable");
            $("#pnl2_body").addClass("bodyDisable");
            $("#pnl3_title").addClass("titleDisable");
            $("#pnl3_body").addClass("bodyDisable");
            $("#pnl4_title").addClass("titleDisable");
            $("#pnl4_body").addClass("bodyDisable");
            $("#pnlLast_title").addClass("titleDisable");
            $("#pnlLast_body").addClass("bodyDisable");

            $('#spin1').addClass("hidden");
            $("#spin2").addClass("hidden");
            $("#spin3").addClass("hidden");
            $("#spin4").addClass("hidden");
            $("#spinLast").addClass("hidden");
            $('#btnRetry1').addClass("hidden");
            $("#btnRetry2").addClass("hidden");
            $("#btnRetry3").addClass("hidden");
            $("#btnRetry4").addClass("hidden");
            $("#btnRetryLast").addClass("hidden");

            if (idx == 1) {
                $("#pnl1_title").removeClass("titleDisable");
                $("#pnl1_body").removeClass("bodyDisable");
                $('#err1').html("");
                $("#spin1").removeClass("hidden");
                $("#done1").addClass("hidden");
            }
            else if (idx == 2) {
                $("#pnl2_title").removeClass("titleDisable");
                $("#pnl2_body").removeClass("bodyDisable");
                $('#err2').html("");
                $("#spin2").removeClass("hidden");
                $("#done2").addClass("hidden");
            }
            else if (idx == 3) {
                $("#pnl3_title").removeClass("titleDisable");
                $("#pnl3_body").removeClass("bodyDisable");
                $('#err3').html("");
                $("#spin3").removeClass("hidden");
                $("#done3").addClass("hidden");
            }
            else if (idx == 4) {
                $("#pnl4_title").removeClass("titleDisable");
                $("#pnl4_body").removeClass("bodyDisable");
                $('#err4').html("");
                $("#spin4").removeClass("hidden");
                $("#done4").addClass("hidden");
            }
            else if (idx == 0) {
                //
                $('#spin1').addClass("hidden");
                $("#spin2").addClass("hidden");
                $("#spin3").addClass("hidden");
                $("#spin4").addClass("hidden");
                $("#spinLast").addClass("hidden");
                $("#done1").addClass("hidden");
                $("#done2").addClass("hidden");
                $("#done3").addClass("hidden");
                $("#done4").addClass("hidden");
                $("#doneLast").addClass("hidden");
            }
            else {
                $("#pnlLast_title").removeClass("titleDisable");
                $("#pnlLast_body").removeClass("bodyDisable");
                $('#err5').html("");
                $("#spinLast").removeClass("hidden");
                $("#doneLast").addClass("hidden");
            }

        }

        function loadLoaderList() {
            $.ajax({
                url: "/Loader/GetLoaderList_ReadyToLoad/",
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    Swal.fire({
                        text: 'Please Wait',
                        width: '300px',

                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        showConfirmButton: false,
                    });
                    Swal.showLoading();
                },
                success: function (result) {
                    // console.log(result);
                    swal.close();
                    if (result.success == true) {

                        // Get the select element
                        const selLoader = document.getElementById('selLoader');
                        for (const opt of result.data)
                        {
                            const el = document.createElement("option");
                            el.textContent = opt.loaderCode;
                            el.value = opt.loader_Id;
                            selLoader.appendChild(el);
                        }

                    }
                    else {
                        swal.fire({
                            icon: 'error',
                            title: "Wait",
                            text: result.errMessage
                        });
                    }
                },
                error: function (error) {
                    swal.fire({
                        icon: 'error',
                        title: "Wait",
                        text: error.val
                    });
                }
            });
        }

        function showLoaderForm() {
            $("#loaderModal").modal("toggle");
        }

        function addLoader(_type, id, code) {
            if (_type == 1) {
                const selLoader = document.getElementById('selLoader');
                const idx = selLoader.selectedIndex;
                const selectedOption = selLoader.options[idx];
                id = selectedOption.value;
                code = selectedOption.text;


                $.ajax({
                    url: "/Loader/GetLoaderInfo_ReadyToLoad?req=" + code,
                    type: "GET",
                    dataType: 'JSON',
                    // data: JSON.stringify(jsonInput),
                    contentType: 'application/json; charset=utf-8',
                    beforeSend: function () {
                        Swal.fire({
                            text: 'Please Wait',
                            width: '300px',

                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            showConfirmButton: false,
                        });
                        Swal.showLoading()
                    },
                    success: function (result) {
                        //console.log(result);
                        swal.close();
                        if (result.success == true) {
                        }
                        else {
                            swal.fire({
                                icon: 'error',
                                title: "Wait",
                                text: result.errMessage
                            });
                            return;
                        }
                    },
                    error: function (error) {
                        swal.fire({
                            icon: 'error',
                            title: "Wait",
                            text: error.val
                        });
                        return;
                    }
                });

            }

            // continue
            $("#txtLoader").val(code);
            $("#txtLoaderId").val(id);
            $("#loaderModal").modal("toggle");

            loadPLC(1);
        }

        function cancelLoaderForm() {
            $("#loaderModal").modal("toggle");
        }

        function delay(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

        function retry1() {
            $('#btnRetry1').addClass("hidden");
            $("#txtLoader").val('');
            $("#txtLoaderId").val('');
            $("#loaderModal").modal("toggle");
        }

        function retry2() {
            resetColorPLCForm(2);
            $('#spin1').removeClass("err");
            $("#txtEstHeight").val(0);
            $("#txtActHeight").val(0);
            $("#txtReelCode").val('');
            // $("#txtICol").val(1);
            $("#itemModal").modal("toggle");
        }

        function retry3() {
            // $("#txtICol").val(1);
            loadPLC(3);
        }

        function cont4() {
                $("#putModal").modal("toggle");
            loadPLC(4);
        }

        async function loadPLC(idx) {

            var loaderId = $("#txtLoaderId").val();

            // step 1 : check loader
            if (idx == 1) {
                resetColorPLCForm(1);
                if (loaderId == "") {
                    $('#spin1').addClass("err");
                    $('#pLoader1').html("Loader : unknown");
                    $('#err1').html("No loader is selected.");
                    $('#btnRetry1').removeClass("hidden");
                    return;
                }

                // await delay(3000);
                var chkLoader = await loadPLCCheckLoader(loaderId);
                console.log('R1::' + chkLoader);
                if (chkLoader == false) {
                    $('#btnRetry1').removeClass("hidden");
                }
                else {
                    resetColorPLCForm(2);
                    $("#txtEstHeight").val(0);
                    $("#txtActHeight").val(0);
                    $("#txtReelCode").val('');
                    // $("#txtICol").val(1);

                    $("#itemModal").modal("toggle");
                }
                return;
            }


            var reelCode = $("#txtReelCode").val();

            if (idx == 2) {
                // await delay(3000);
                var chkItem = await loadPLCCheckItem(loaderId, reelCode);
                console.log('R2::' + chkItem);
                if (chkItem == false) {
                    $('#btnRetry2').removeClass("hidden");
                    return;
                }
                else {
                    idx = 3
                }
            }

            var iCol = $("#txtICol").val();
            if (idx == 3) {
                resetColorPLCForm(3);
                $('#pItem3').html("Checking Auto Loader Column : " + iCol);
                await delay(3000);
                var chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                console.log('R3.1::' + chkCol);
                if (chkCol == false) {
                    if (iCol <= 4) {
                        $('#pItem3').html("Checking Auto Loader Column : " + iCol);
                        // await delay(3000);
                        iCol = Number(iCol) + 1;
                        chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                        console.log('R3.2::' + chkCol);
                    };
                }
                if (chkCol == false) {
                    if (iCol <= 4) {
                        $('#pItem3').html("Checking Auto Loader Column : " + iCol);
                        // await delay(3000);
                        iCol = Number(iCol) + 1;
                        chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                        console.log('R3.3::' + chkCol);
                    };
                }
                if (chkCol == false) {
                    if (iCol <= 4) {
                        $('#pItem3').html("Checking Auto Loader Column : " + iCol);
                        // await delay(3000);
                        iCol = Number(iCol) + 1;
                        chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                        console.log('R3.4::' + chkCol);
                    };
                }
                console.log('R3.10::' + iCol);
                if (chkCol == false) {
                    $('#btnRetry3').removeClass("hidden");
                }
                else {
                    $("#txtICol").val(iCol);

                    // wait for fork is ready
                    // await delay(3000);
                    var chkColFork = await loadPLCCheckColFork(loaderId, iCol);
                    if (chkColFork == false) {
                        $('#btnRetry3').removeClass("hidden");
                    }
                    else {
                        $("#putModal").modal("toggle");
                    }
                }
                return;
                // await delay(3000);
            }

            iCol = $("#txtICol").val();
            if (idx == 4) {
                resetColorPLCForm(4);
                await delay(3000);
                var chkAct = await loadPLCActHeight(loaderId, reelCode, iCol);
                console.log('R4::' + chkAct);
                if (chkAct == false && iCol < 4) {
                    iCol = iCol + 1;
                    chkAct = await loadPLCActHeight(loaderId, reelCode, iCol);
                    console.log('R4.2::' + chkAct);
                }
                if (chkAct == false && iCol < 4) {
                    iCol = iCol + 1;
                    chkAct = await loadPLCActHeight(loaderId, reelCode, iCol);
                    console.log('R4.3::' + chkAct);
                }
                if (chkAct == false && iCol < 4) {
                    iCol = iCol + 1;
                    chkAct = await loadPLCActHeight(loaderId, reelCode, iCol);
                    console.log('R4.4::' + chkAct);
                }
                console.log('R4.10::' + chkAct);
                if (chkAct == false) {
                    $('#btnRetry4').removeClass("hidden");
                    return; 
                }
                else {
                    idx = 5;
                }
                // await delay(3000);
            }

            if (idx == 5) {
                resetColorPLCForm(5);
                var chkLast = await loadPLCUpdateDB(loaderId, reelCode, iCol);
                console.log('R5::' + chkLast);
                if (chkLast == false) {
                    $('#btnRetry5').removeClass("hidden");
                    return;
                }
                else {
                    $("#txtScanItem").val('');

                    resetColorPLCForm(2);
                    $("#txtEstHeight").val(0);
                    $("#txtActHeight").val(0);
                    $("#txtReelCode").val('');
                    // $("#txtICol").val(1);

                    await delay(1500);
                    $("#itemModal").modal("toggle");
                }
                // await delay(3000);
            }


        }

        async function loadPLCCheckLoader(loaderId) {

            var fResult = false;

            await $.ajax({
                url: "/api/PLCLoader/GetLoaderId/" + loaderId,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('1::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $('#pLoader1').html("Loader : " + result.data);
                        $('#err1').html("");
                        $('#spin1').removeClass("err");
                        $('#spin1').addClass("hidden");
                        $("#done1").removeClass("hidden");

                        fResult = true;
                    }
                    else {
                        $('#spin1').addClass("err");
                        $('#pLoader1').html("Loader : unknown");
                        $('#err1').html(result.errMessage);
                    }
                },
                error: function (error) {
                    $('#spin1').addClass("err");
                    $('#pLoader1').html("Loader : unknown");
                    $('#err1').html(error.message);
                }
            });

            return fResult;
        }

        async function loadPLCCheckItem(loaderId, reelCode) {

            var fResult = false;

            // step 2 : scan item
            await $.ajax({
                url: "/api/PLCLoader/VerifyItem/" + reelCode,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('2::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $('#pItem2').html("Item : " + result.data.itemCode);
                        $('#pReel2').html("Reel ID : " + result.data.reelCode);
                        $('#pHeight2').html("Est. Height : " + result.data.thickness);
                        $('#err2').html("");
                        $('#spin2').removeClass("err");
                        $('#spin2').addClass("hidden");
                        $("#done2").removeClass("hidden");

                        $("#txtEstHeight").val(result.data.thickness);

                        fResult = true;
                    }
                    else {
                        $('#spin2').addClass("err");
                        $('#pLoader2').html("Loader : unknown");
                        $('#err2').html(result.errMessage);
                    }
                },
                error: function (error) {
                    $('#spin2').addClass("err");
                    $('#pLoader2').html("Loader : unknown");
                    $('#err2').html(error.message);
                }
            });

            return fResult;
        }

        async function loadPLCCheckEstHeight(loaderId, reelCode, iCol) {
            var thickness = $("#txtEstHeight").val();
            // step 3 : check column height balance and change column

            var fResult = false;

            await $.ajax({
                url: "/api/PLCLoader/CheckColumnHeight/" + loaderId + "/" + iCol + "/" + thickness,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('3::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {

                        $('#pItem3').html("Auto Loader Column : " + iCol);
                        $('#err3').html("");
                        $('#spin3').removeClass("err");
                        $('#spin3').addClass("hidden");
                        $("#done3").removeClass("hidden");

                        fResult = true;

                    }
                    else {
                        if (iCol <= 4) {
                            $('#spin3').addClass("err");
                            $('#pLoader3').html("Loader : Wait turn to next column ... ");
                            $('#err3').html(result.errMessage);
                        }
                        else {
                            $('#spin3').addClass("err");
                            $('#pLoader3').html("Loader : All column is full, please change auto loader.");
                            $('#err3').html(result.errMessage);
                        }

                    }
                },
                error: function (error) {
                    if (iCol <= 4) {
                        $('#spin3').addClass("err");
                        $('#pLoader3').html("Loader : Wait turn to next column ... ");
                        $('#err3').html(error.message);
                    }
                    else {
                        $('#spin3').addClass("err");
                        $('#pLoader3').html("Loader : All column is full, please change auto loader.");
                        $('#err3').html(error.message);
                    }
                }
            });

            // console.log('3::' + fResult);
            return fResult;
        }

        async function loadPLCCheckColFork(loaderId, iCol) {
            var thickness = $("#txtEstHeight").val();
            // step 3 : check column height balance and change column

            var fResult = false;

            await $.ajax({
                url: "/api/PLCLoader/GetColumnReady/" + loaderId + "/" + iCol,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('4.5::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {

                        $('#pItem3').html("Auto Loader Column : " + iCol + " <br> Column is READY.");
                        $('#err3').html("");
                        $('#spin3').removeClass("err");
                        $('#spin3').addClass("hidden");
                        $("#done3").removeClass("hidden");

                        fResult = true;

                    }
                    else {
                        if (iCol <= 4) {
                            $('#spin3').addClass("err");
                            $('#pLoader3').html("Loader : Wait turn to next column ... ");
                            $('#err3').html(result.errMessage);
                        }
                        else {
                            $('#spin3').addClass("err");
                            $('#pLoader3').html("Loader : All column is full, please change auto loader.");
                            $('#err3').html(result.errMessage);
                        }

                    }
                },
                error: function (error) {
                    if (iCol <= 4) {
                        $('#spin3').addClass("err");
                        $('#pLoader3').html("Loader : Wait turn to next column ... ");
                        $('#err3').html(error.message);
                    }
                    else {
                        $('#spin3').addClass("err");
                        $('#pLoader3').html("Loader : All column is full, please change auto loader.");
                        $('#err3').html(error.message);
                    }
                }
            });

            // console.log('3::' + fResult);
            return fResult;
        }

        async function loadPLCActHeight(loaderId, reelCode, iCol) {

            var fResult = false;

            // step 4 : get actual height balance
            await $.ajax({
                url: "/api/PLCLoader/GetReelActualHeight/" + loaderId + "/" + iCol,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('4::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $("#txtActHeight").val(result.data);
                        $('#pLoader4').html("Loader : " + iCol);
                        $('#pHeight4').html("Actual Height : " + result.data);
                        $("#done4").removeClass("hidden");

                        fResult = true;
                    }
                    else {
                        if (iCol < 4) {
                            $('#spin4').addClass("err");
                            $('#pLoader4').html("Loader : Wait turn to next column ... ");
                            $('#pHeight4').html("Actual Height : " + result.data);
                            $('#err4').html(result.errMessage);
                        }
                        else {
                            $('#spin4').addClass("err");
                            $('#pLoader4').html("Loader : All column is full, please change auto loader.");
                            $('#pHeight4').html("Actual Height : " + result.data);
                            $('#err4').html(result.errMessage);

                        }
                    }
                },
                error: function (error) {
                    if (iCol < 4) {
                        $('#spin4').addClass("err");
                        $('#pLoader4').html("Loader : Wait turn to next column ... ");
                        $('#pHeight4').html("Actual Height : ");
                        $('#err4').html(error.message);
                    }
                    else {
                        $('#spin4').addClass("err");
                        $('#pLoader4').html("Loader : All column is full, please change auto loader.");
                        $('#pHeight4').html("Actual Height : ");
                        $('#err4').html(error.message);
                    }
                }
            });

            return fResult;
        }

        async function loadPLCUpdateDB(loaderId, reelCode, iCol) {
            var actHeight = $("#txtActHeight").val();
            // console.log('5::' + actHeight);

            // step 5 : Save data
            $.ajax({
                url: "/api/PLCLoader/UpdateReelIntoLoader/" + loaderId + "/" + iCol + "/" + reelCode + "/" + actHeight,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('5::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $('#pTextLast').html("ALL DONE");
                        $("#doneLast").removeClass("hidden");

                        // continue new Item
                    }
                    else {
                        $('#spinLast').addClass("err");
                        $('#pTextLast').html(result.errMessage);
                    }
                },
                error: function (error) {
                    $('#spinLast').addClass("err");
                    $('#pTextLast').html(error.message);
                }
            });

            return true;
        }

    </script>
}
