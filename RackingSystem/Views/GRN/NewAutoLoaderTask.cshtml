
@{
}


<style type="text/css">
    body {
        color: #566787;
        background: #f5f5f5;
        /* font-family: 'Varela Round', sans-serif; */
        /* font-size: 13px; */
    }

    .status {
        font-size: 30px;
        margin: 2px 2px 0 0;
        display: inline-block;
        vertical-align: middle;
        line-height: 10px;
    }

    .table-title {
        color: #fff;
        background: #4b5366;
        /*     padding: 16px 25px;
                        margin: -20px -25px 10px; */
        border-radius: 3px 3px 0 0;
    }

    .table-title h2 {
        margin: 5px 0 0;
        font-size: 24px;
    }

    .containerDtl {
        height: 100%;
        width: 100%;
        border-radius: 10px;
        overflow: hidden;
        background-color: white;
        padding: 30px;       
    }

    .containerDtlHistory {
        width: 100%;
        border-radius: 10px;
        overflow: hidden;
        background-color: white;
        padding: 30px;
    }

    .containerDtlHistory p {
        margin-bottom: 0;
    }

    .containerDtlHistory input {
        /* padding: 10px 0; */
        margin-bottom: 10px;
    }

    .progressBar {
        margin-bottom: 30px;
        overflow: hidden;
        color: lightgray;
        display: flex;
        /* justify-content: space-between;
        padding: 0;
        position: relative; */
    }

    .progressBar li {
        list-style-type: none;
        font-size: 15px;
        width: 16.66%;
        float: left;
        font-weight: 400;
        text-align: center;
        position: relative;
        z-index: 1;
    }

    .progressBar .active {
        color: #673ab7;
    }

    .progressBar li::before {
        width: 50px;
        height: 50px;
        line-height: 50px;
        display: block;
        font-size: 20px;
        color: #fff;
        background: lightgrey;
        border-radius: 50%;
        margin: 0 auto 10px auto;
        padding: 2px;
    }

    .progressBar li::after {
        content: "";
        width: 100%;
        height: 2px;
        background: lightgrey;
        position: absolute;
        left: 50px;
        top: 25px;
        z-index: -1;
    }

    .progressBar li.active::before {
        background: #673ab7;
    }

    .progressBar li.next::after {
        background: #673ab7;
    }

    .progressBar #step1::before {
        content: "1";
        font-family: Arial;
    }

    .progressBar #step2::before {
        content: "2";
        font-family: Arial;
    }

    .progressBar #step3::before {
        content: "3";
        font-family: Arial;
    }

    .progressBar #step4::before {
        content: "4";
        font-family: Arial;
    }

    .progressBar #step5::before {
        content: "5";
        font-family: Arial;
    }

    .progressBar #stepLast::before {
        content: "6";
        font-family: Arial;
    }

    .progressBar #stepLast::after {
        width: 0;
    }

    .form-group {
        display: none;
    }

    .form-group.form-active {
        display: block;
        margin: 30px 0;
    }

    .form-group-row {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding-bottom: 10px;
    }

    .form-title {
        color: #673ab7;
        text-align: center;
        font-size: 28px;
        margin: 20px 0;
    }

    .error-message {
        color: red;
        /* font-size: 0.875rem; */
    }

    .hidden {
        display: none;
    }

    @@media (min-width: 1440px) {
        .progressBar li::after {
            left: 100px;
        }
    }

    .gauge {
        position: relative;
        border-radius: 50%/100% 100% 0 0;
        background-color: var(--color, #a22);
        overflow: hidden;
    }

    .gauge:before {
        content: "";
        display: block;
        padding-top: 50%; /* ratio of 2:1*/
    }

    .gauge .chart {
        overflow: hidden;
    }

    .gauge .mask {
        position: absolute;
        left: 20%;
        right: 20%;
        bottom: 0;
        top: 40%;
        background-color: #fff;
        border-radius: 50%/100% 100% 0 0;
    }

    .gauge .percentage {
        position: absolute;
        top: -1px;
        left: -1px;
        bottom: 0;
        right: -1px;
        background-color: var(--background, #aaa);
        transform: rotate(var(--rotation));
        transform-origin: bottom center;
        transition-duration: 600;
    }

    .gauge:hover {
        --rotation: 100deg;
    }

    .gauge .value {
        position: absolute;
        bottom: 0%;
        left: 0;
        width: 100%;
        text-align: center;
    }

    .gauge .min {
        position: absolute;
        bottom: 0;
        left: 5%;
    }

    .gauge .max {
        position: absolute;
        bottom: 0;
        right: 5%;
    }

    .text-bg-light {
        background-color: grey !important;
    }
</style>

<div class="container-fluid">

    <div class="row">
        <div class="col-12">
            <div class="card card-outline ">
                <div class="card-header table-title">
                    <div class="card-title">
                        <h2>NEW Auto Loader Task <b></b></h2>
                    </div>
                    <div class="card-tools">
                        <button type="button" class="btn btn-danger" onclick="restartStep()">
                            NEW LOADER
                        </button>
                        <button type="button" class="btn btn-warning" onclick="restartItem()">
                            CHANGE REEL
                        </button>
                        <button type="button" class="btn btn-success" onclick="endTask()">
                            END TASK
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-3" style="padding-right:0px;">
                        <div class="card-body" style="background: #f2f2f2; width:100%; height:100%;padding-right:0px;">
                            <div class="container containerDtlHistory" style="min-height:100px;">
                                <div class="row">
                                    <div class="col-12">
                                        <p class="text-center"><strong>Loader : 00AS01</strong></p>
                                        <br />
                                        <div class="progress-group">
                                           <i class="bi bi-music-note" style="color: green;"></i> 
                                                Column 1
                                            <span class="float-end"><b>30</b>/110 mm</span>
                                            <div class="progress progress-sm">
                                                <div class="progress-bar text-bg-light" style="width: 80%"></div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="progress-group">
                                            Column 2
                                            <span class="float-end"><b>30</b>/110 mm</span>
                                            <div class="progress progress-sm">
                                                <div class="progress-bar text-bg-light" style="width: 10%"></div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="progress-group">
                                            Column 3
                                            <span class="float-end"><b>30</b>/110 mm</span>
                                            <div class="progress progress-sm">
                                                <div class="progress-bar text-bg-light" style="width: 0%"></div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="progress-group">
                                            Column 4
                                            <span class="float-end"><b>30</b>/110 mm</span>
                                            <div class="progress progress-sm">
                                                <div class="progress-bar text-bg-light" style="width: 50%"></div>
                                            </div>
                                        </div>
                                        <hr />
                                        <div style="width: 100%; display: flex; justify-content: center;">
                                            <div class="gauge" style="width: 200px; --rotation:180deg; --color:#5cb85c; --background:#e9ecef;">
                                                <div class="percentage"></div>
                                                <div class="mask"></div>
                                                <span class="value"><span style="font-size:12px;">Battery : </span>100%</span>
                                            </div>
                                        </div>
                                    </div>
                                    @* <div class="col-12">
                                        <p>Auto Loader ID : </p>
                                        <input class="form-control" type="text" id="txtHLoader" disabled> 
                                        <p>Column : </p>
                                        <input class="form-control" type="text" id="txtHCol" disabled>
                                        <p>Balance Height : </p>
                                        <input class="form-control" type="text" id="txtHColBal" disabled>
                                    </div>*@
                                </div>
                            </div>
                            <br />
                            <div class="container containerDtlHistory" style="min-height:100px;">
                                <p>Reel ID : </p>
                                <input class="form-control" type="text" id="txtHReelID" disabled>
                                <p>Item : </p>
                                <input class="form-control" type="text" id="txtHItem" disabled>
                                <p>Ext. Height : </p>
                                <input class="form-control" type="text" id="txtHExtH" disabled>
                                <p>Act. Height : </p>
                                <input class="form-control" type="text" id="txtHActH" disabled>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-9" style="padding-left:0px;">
                        <div class="card-body" style="background: #f2f2f2; height:100%;">
                            <div class="container containerDtl" style="">
                                <ul class="progressBar">
                                    <li class="active" id="step1">Loader</li>
                                    <li id="step2">Column</li>
                                    <li id="step3">Reel</li>
                                    <li id="step4">Pre-Load</li>
                                    <li id="step5">Put</li>
                                    <li id="stepLast">Finalize</li>
                                </ul>
                                <div class="form-group" id="sec1">
                                    <div class="row">
                                        <h2 class="form-title">Step 1 :: Scan Loader </h2>
                                        <div class=" " id="pnl1_body">
                                            <div class="row">
                                                <div class="col-sm-12 col-md-6" style="text-align: center;">
                                                    <img src="~/assets/img/barcode.gif" style="width:50%;" />
                                                </div>
                                                <div class="col-sm-12 col-md-6">
                                                    <div class="input-group">
                                                        <input class="form-control" type="text" placeholder="Scan or Insert Loader ID ... " id="txtScanLoader">
                                                        <span class="input-group-text" onclick="clearLoaderScanCode()">X</span>
                                                    </div>
                                                    <br />
                                                    <p id="pLoader1">
                                                        Loader :
                                                        <span class="error-message" id="err1"> aaa </span>
                                                    </p>
                                                    <button class="btn btn-success" style="width:100%;" onclick="retry1()"> Next </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" id="sec2">
                                    <div class="row">
                                        <h2 class="form-title">Step 2 :: Check Column </h2>
                                        <div class=" " id="pnl2_body">
                                            <div class="row">
                                                <div class="col-sm-12 col-md-6" style="text-align: center;">
                                                    <img src="~/assets/img/loading.gif" style="width:50%;" />
                                                </div>
                                                <div class="col-sm-12 col-md-6">
                                                    <p id="pCol3">
                                                        Available Column :
                                                        <span style="color:red; font-size:15px;" id="errCol3"> </span>
                                                    </p>
                                                    <p id="pFork3">
                                                        Fork Status :
                                                        <span style="color:red; font-size:15px;" id="errFork3"> </span>
                                                    </p>
                                                    <button class="btn btn-warning hidden" id="btnRetry2" style="width:100%;" onclick="step2()" >Retry Column Checking</button>
                                                    <button class="btn btn-success hidden" id="btnNext2" style="width:100%;" onclick="retry2()"> Next </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" id="sec3">
                                    <div class="row">
                                        <h2 class="form-title">Step 3 :: Scan Reel ID </h2>
                                        <div class=" " id="pnl3_body">
                                            <div class="row">
                                                <div class="col-sm-12 col-md-6" style="text-align: center;">
                                                    <img src="~/assets/img/qr-code (1).gif" style="width:50%;" />
                                                </div>
                                                <div class="col-sm-12 col-md-6">
                                                    <div class="input-group">
                                                        <input class="form-control" type="text" placeholder="Scan or Insert Reel ID ... " id="txtScanItem">
                                                        <span class="input-group-text" onclick="clearItemScanCode()">X</span>
                                                    </div>
                                                    <br />
                                                    <p id="pItem2">
                                                        Item :
                                                        <span style="color:red; font-size:15px;" id="err2"> </span>
                                                    </p>
                                                    <p id="pReel2">
                                                        Reel ID :
                                                    </p>
                                                    <p id="pHeight2">
                                                        Est. Height :
                                                    </p>
                                                    <button class="btn btn-warning hidden" style="width:100%;" onclick="step3()" id="btnRetry3"> Retry Scan Reel ID </button>
                                                    <button class="btn btn-success hidden" style="width:100%;" onclick="retry3()" id="btnNext3"> Next </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" id="sec4">
                                    <div classs="row">
                                        <h2 class="form-title">Step 4 :: Pre-Load Confirmation </h2>
                                        <div id="pnl5_body">
                                            <div class="row">
                                                <div class="col-sm-12 col-md-6" style="text-align: center;">
                                                    <img src="~/assets/img/pre-load.gif" style="width:50%;" />
                                                </div>
                                                <div class="col-sm-12 col-md-6">
                                                    <p>Auto Loader Status: </p>
                                                    <p>Column Status: </p>
                                                    <p>Fork Status: </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" id="sec5">
                                    <div class="row">
                                        <h2 class="form-title">Step 5 :: Check Actual Height </h2>
                                        <div class=" " id="pnl4_body">
                                            <div class="row">
                                                <div class="col-sm-12 col-md-6" style="text-align: center;">
                                                    <img src="~/assets/img/3d-scanning.gif" style="width:50%;" />
                                                </div>
                                                <div class="col-sm-12 col-md-6">
                                                    <p id="pLoader4">
                                                        Auto Loader Column : 1 <span style="color:red; font-size:15px;" id="err4"> </span>
                                                    </p>
                                                    <p id="pHeight4">
                                                        Actual Height :
                                                    </p>

                                                    <button class="btn btn-warning hidden" onclick="loadPLC(5)" id="btnRetry4" style="width:100%;">Retry Read Height</button>
                                                    <button class="btn btn-success hidden"  onclick="loadPLC(6)" id="btnNext4" style="width:100%;"> Next </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" id="secLast">
                                    <div class="row form-group-row">
                                        <h2 class="form-title">Step 6 :: Finalizing </h2>
                                        <div class=" " id="pnlLast_body">
                                            <div class="row">
                                                <div class="col-sm-12 col-md-6" style="text-align: center;">
                                                    <img src="~/assets/img/padlock.gif" style="width:50%;" />
                                                </div>
                                                <div class="col-sm-12 col-md-6">
                                                    <p style="text-align:center;" id="pTextLast">Waiting finish loading reel ...</p>

                                                    <button class="btn btn-warning" onclick="loadPLC(6)" id="btnRetryLast" style="width:49%;">Retry Save</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <input type="hidden" id="txtLoaderId">
                            <input type="hidden" id="txtLoaderCode">
                            <input type="hidden" id="txtEstHeight">
                            <input type="hidden" id="txtActHeight">
                            <input type="hidden" id="txtReelCode">
                            <input type="hidden" id="txtICol">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="warnTurnModal" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body" style="padding: 50px;">
                <div class="row">
                    <div class="col-6">
                        <img src="~/assets/img/a-b.gif" style="width:100%;" />
                    </div>
                    <div class="col-6">
                        <p class="" style="font-size:2em;">Please make sure hands off and tap Start Turn Column button.</p>
                        <button class="btn btn-success" style="width: 100%; height: 150px;" onclick="turnCol()">Start Turn Column</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="putModal" role="dialog" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body" style="padding: 50px;">
                <div class="row">
                    <div class="col-6">
                        <img src="~/assets/img/3d-scanning.gif" style="width:100%;" />
                    </div>
                    <div class="col-6">
                        <p class="" style="font-size:32px;">Please put Reel and tap Start button.</p>
                        <button class="btn btn-success" style="width: 100%; height: 150px;" onclick="loadPLC(5)">Start</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <link href="~/css/datatables.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/sweetalert2.min.css">

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/datatables.min.js"></script>
    <script src="~/js/sweetalert2.all.min.js"></script>

    <script type="text/javascript">

        // -- get loader info --
        const scanLoaderEle = document.getElementById('txtScanLoader');
        scanLoaderEle.addEventListener('keyup', function(event) {
          // Check if the pressed key is "Enter" (key code 13 or key property "Enter")
          if (event.key === 'Enter') {

            const inputValue = this.value;
            var code = inputValue;
            $.ajax({
                url: "/Loader/GetLoaderInfo_ReadyToLoad?req=" + code,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    Swal.fire({
                        text: 'Please Wait',
                        width: '300px',

                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        showConfirmButton: false,
                    });
                    Swal.showLoading()
                },
                success: function (result) {
                    swal.close();
                    if (result.success == true) {
                        addLoader(0, result.data.loader_Id, result.data.loaderCode);
                    }
                    else {
                        $('#pLoader1').html('Loader :  <span class="error-message" id="err1">' + result.errMessage + '</span>');
                    }
                },
                error: function (error) {
                    $('#pLoader1').html('Loader :  <span class="error-message" id="err1">' + error.val + '</span>');
                }
            });
          }
        });

        // -- scan reel ID --
        const scanItemEle = document.getElementById('txtScanItem');
        scanItemEle.addEventListener('keyup', function(event) {
          // Check if the pressed key is "Enter" (key code 13 or key property "Enter")
          if (event.key === 'Enter') {
            const inputValue = this.value;

            $("#txtReelCode").val(inputValue);
            $("#itemModal").modal("toggle");

            loadPLC(3);
          }
        });


        $(document).ready(function () {
            resetColorPLCForm(1);
            newReel();
            loadLoaderList();

            $("#txtLoaderId").val('');
            $("#txtEstHeight").val(0);
            $("#txtActHeight").val(0);
            $("#txtReelCode").val('');
            $("#txtICol").val(1);

            scanLoaderEle.focus();

            var data=[{
              type: "indicator",
              mode: "gauge+number+delta",
              value: 60,
              title: {
                text: 'Speed',
                font: { size: 14 },
                yanchor: 'bottom',
                y: 10
              },
              delta: { increasing: { color: "white" } },
              gauge: {
                shape: 'angular',
                axis: {
                  range: [0, 100],
                  visible: true,
                  tickwidth: 1,
                  tickcolor: "rgb(178, 178, 178)",
                  tickvals: [0, 100],
                  tickmode: 'array',
                  tickfont: {
                    size: '100px'
                  }
                },
                bar: { color: "rgb(237, 61, 61)", thickness: 1 },
                bgcolor: "rgb(178, 178, 178)",
                bordercolor: "rgb(178, 178, 178)",
              }
            }];

            var layout = {
              margin: {
                l: 30,
                r: 30,
                b: 5,
                t: 0,
                pad: 0
              }
            };

            // Plotly.newPlot('myDiv', data, layout);
        });

        function clearLoaderScanCode() {
            scanLoaderEle.focus();
            // $("#txtHLoader").val('');
            // $("#txtHCol").val('');
            // $("#txtHColBal").val('');

            const inputFields = ['#txtScanLoader', '#txtLoaderId', '#txtLoaderCode'];
            inputFields.forEach(i => $(i).val(''));
        }

        function clearItemScanCode() {
            scanItemEle.focus();
            const fields = ['#txtScanItem', '#txtReelCode', '#txtHReelID', '#txtHItem', '#txtHExtH', '#txtHActH'];
            fields.forEach(i => $(i).val(''));
        }

        function restartStep() {
            resetColorPLCForm(1);
            newReel();
            // $("#txtHLoader").val('');
            // $("#txtHCol").val('');
            // $("#txtHColBal").val('');

            scanLoaderEle.focus();
            $("#txtEstHeight").val(0);
            $("#txtActHeight").val(0);
            $("#txtICol").val(1);

            const fields = ['#txtLoaderId', '#txtLoaderCode', '#txtReelCode', '#txtHReelID', '#txtHItem', '#txtHExtH', '#txtHActH'];
            fields.forEach(i => $(i).val(''));
        }

        function restartItem() {
            var loaderId = $("#txtLoaderId").val();
            if (loaderId == "") {
                restartStep();
                return;
            }

            resetColorPLCForm(2);
            newReel();
            scanLoaderEle.focus();
        }

        function newReel() {
            $('#pt2').html("STEP 2 :: Waiting Scan Reel ... ");
            $('#pt3').html("STEP 3 :: Checking column available ... ");
            $('#pt4').html("STEP 4 :: Reading Reel Info ... ");
            $('#ptLast').html("STEP 5 :: Keep Record and Finalyzing ... ");

            $('#pReel2').html("Reel ID : ");
            $('#pHeight2').html("Est. Height : ");
            $('#pHeight4').html("Actual Height : ");
            $('#pTextLast').html("Waiting finish loading reel ... ");

            const inputs = [
                { id: "#txtScanItem", value: '' },
                { id: "#txtEstHeight", value: 0 },
                { id: "#txtActHeight", value: 0 },
                { id: "#txtReelCode", value: '' },
                { id: "#txtHReelID", value: '' },
                { id: "#txtHItem", value: '' },
                { id: "#txtHExtH", value: '' },
                { id: "#txtHActH", value: '' }
            ];
            inputs.forEach(input => {
                $(input.id).val(input.value);
            });

            const errorMessages = [
                { id: 'err2', message: 'Item : '},
                { id: 'errCol3', message: 'Available Column : '},
                { id: 'errFork3', message: 'Fork Status: '},
                { id: 'err4', message: 'Auto Loader Column : '}
            ];
            errorMessages.forEach(error => {
                $(`#${error.id}`).html(`<span class="error-message" id="${error.id]}"></span>`);
            });

            $("#waiting2, #waiting3, #waiting4, #waitingLast").removeClass("hidden");

        }

        function resetColorPLCForm(idx) {
            const sections = ['sec1', 'sec2', 'sec3', 'sec4', 'sec5', 'secLast'];
            const steps = ['step1', 'step2', 'step3', 'step4', 'step5', 'stepLast'];

            sections.forEach(id => $('#' + id).removeClass("form-active"));
            steps.forEach(id => $('#' + id).removeClass("next active"));

            $('#btnRetry4, #btnRetryLast').addClass("hidden");
            $('#err1, #err2, #errCol3, #errFork3, #err4, #err5').html("");

            if (idx >= 1 && idx <= 5) {
                $('#' + sections[idx - 1]).addClass('form-active');
                
                for (let i = 0; i < idx; i++) {
                    $('#' + steps[i]).addClass('active');
                }

                for (let i = 0; i < idx - 1; i++) {
                    $('#' + steps[i]).addClass('next');
                }
            } else if (idx == 0) {
                return;
            } else {
                $('#' + sections[5]).addClass('form-active');
                for (let i = 0; i < 5; i++) {
                    $('#' + steps[i]).addClass('next active');
                }
                $('#' + steps[5]).addClass('active');
            }
        }

        function loadLoaderList() {
            $.ajax({
                url: "/Loader/GetLoaderList_ReadyToLoad/",
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    Swal.fire({
                        text: 'Please Wait',
                        width: '300px',

                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        showConfirmButton: false,
                    });
                    Swal.showLoading();
                },
                success: function (result) {
                    // console.log(result);
                    swal.close();
                    if (result.success == true) {

                        // // Get the select element
                        // const selLoader = document.getElementById('selLoader');
                        // for (const opt of result.data)
                        // {
                        //     const el = document.createElement("option");
                        //     el.textContent = opt.loaderCode;
                        //     el.value = opt.loader_Id;
                        //     selLoader.appendChild(el);
                        // }

                    }
                    else {
                        swal.fire({
                            icon: 'error',
                            title: "Wait",
                            text: result.errMessage
                        });
                    }
                },
                error: function (error) {
                    swal.fire({
                        icon: 'error',
                        title: "Wait",
                        text: error.val
                    });
                }
            });
        }

        function addLoader(_type, id, code) {
            if (_type == 1) {
                const selLoader = document.getElementById('selLoader');
                const idx = selLoader.selectedIndex;
                const selectedOption = selLoader.options[idx];
                id = selectedOption.value;
                code = selectedOption.text;

                $.ajax({
                    url: "/Loader/GetLoaderInfo_ReadyToLoad?req=" + code,
                    type: "GET",
                    dataType: 'JSON',
                    // data: JSON.stringify(jsonInput),
                    contentType: 'application/json; charset=utf-8',
                    beforeSend: function () {
                        Swal.fire({
                            text: 'Please Wait',
                            width: '300px',

                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            showConfirmButton: false,
                        });
                        Swal.showLoading()
                    },
                    success: function (result) {
                        //console.log(result);
                        swal.close();
                        if (result.success == true) {
                        }
                        else {
                            swal.fire({
                                icon: 'error',
                                title: "Wait",
                                text: result.errMessage
                            });
                            return;
                        }
                    },
                    error: function (error) {
                        swal.fire({
                            icon: 'error',
                            title: "Wait",
                            text: error.val
                        });
                        return;
                    }
                });

            }

            // continue
            $("#txtLoaderId").val(id);
            $("#txtLoaderCode").val(code);
            loadPLC(1);

            $("#txtHLoader").val(code);
        }

        function delay(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

        function retry1() {
            var loaderId = $("#txtLoaderId").val();
            if (loaderId == "") {
                $('#pLoader1').html('Loader : <span class="error-message" id="err1"> Must select Auto Loader </span>');
                return;
            }
            var loaderCode = $("#txtLoaderCode").val();
            var scanCode = $("#txtScanLoader").val();
            if (loaderCode.toUpperCase() != scanCode.toUpperCase()) {
                $('#pLoader1').html('Loader : <span class="error-message" id="err1"> Please rescan the Loader </span>');
                return;
            }

            step2();
        }

        function step2() {
            $('#btnRetry2').addClass('hidden');
            resetColorPLCForm(2);
            $('#errFork3').html('');

            setTimeout(3000);
            loadPLC(2);
        }

        function retry2() {
            resetColorPLCForm(3);

            $('#pItem2').html('Item : <span class="error-message" id="err2"></span>');
            $('#pReel2').html("Reel ID : ");
            $('#pHeight2').html("Est. Height : ");

            $("#txtEstHeight").val(0);
            $("#txtActHeight").val(0);
            const fields = ['#txtReelCode', '#txtHReelID', '#txtHItem', '#txtHExtH', '#txtHActH'];
            fields.forEach(i => $(i).val(''));
        }

        function step3() {
            $("#btnRetry3").addClass("hidden");
            $("#err2").html("");

            var reelCode = $("#txtReelCode").val();
            var scanCode = $("#txtScanItem").val();
            if (reelCode.toUpperCase() != scanCode.toUpperCase() || (reelCode == "" || scanCode == "")) {
                $('#pItem2').html('Item : <span class="error-message" id="err2"> Please scan Reel. </span>');
                return;
            }

            console.log("reelCode", reelCode, "scanCode", scanCode);
            setTimeout(3000);
            loadPLC(3);
        }

        function retry3() {
            resetColorPLCForm(4);
            cont4();
        }

        function cont4() {
            loadPLC(4);
            $("#putModal").modal("show");
        }

        async function turnCol() {
            $("#warnTurnModal").modal("toggle");
            var loaderId = $("#txtLoaderId").val();
            var iCol = $("#txtICol").val();
            var realCol = await loadPLCGetCurrentColumn(loaderId);
            if (Number(realCol) == 0) {
                $('#btnRetry3').removeClass("hidden");
            }
            else {
                if (realCol < iCol) {
                    var turnCol = await loadPLCTurnColumn(loaderId, Number(iCol));
                    if (turnCol == false) {
                        return;
                    }
                    realCol = iCol; // (realCol) + 1;
                }
                // if (realCol < iCol) {
                //     var turnCol = await loadPLCTurnColumn(loaderId, Number(realCol));
                //     if (turnCol == false) {
                //         return;
                //     }
                //     realCol = Number(realCol) + 1;
                // }
                // if (realCol < iCol) {
                //     var turnCol = await loadPLCTurnColumn(loaderId, Number(realCol));
                //     if (turnCol == false) {
                //         return;
                //     }
                //     realCol = Number(realCol) + 1;
                // }

                // wait for fork is ready
                // await delay(3000);
                var chkColFork = await loadPLCCheckColFork(loaderId, iCol);
                if (chkColFork == false) {
                    $('#btnRetry2').removeClass("hidden");
                }
                else {
                    // $("#putModal").modal("toggle");
                    $('#btnNext2').removeClass('hidden');
                    $('#btnRetry2').addClass("hidden");
                }

            }
        }

        async function loadPLC(idx) {

            var loaderId = $("#txtLoaderId").val();

            // step 1 : check loader
            if (idx == 1) {
                resetColorPLCForm(1);
                if (loaderId == "") {
                    $('#pLoader1').html("Loader : ");
                    $('#err1').html("No loader is selected.");
                    $('#btnRetry1').removeClass("hidden");
                    return;
                }

                // await delay(3000);
                var chkLoader = await loadPLCCheckLoader(loaderId);
                console.log('R1::' + chkLoader);
                return;
            }

            var reelCode = $("#txtReelCode").val();
            var iCol = $("#txtICol").val();

            if (idx == 2) {
                resetColorPLCForm(2);
                $('#pCol3').html("Checking Auto Loader Column : " + iCol);
                // await delay(3000);
                var chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                console.log('R3.1::' + chkCol);

                if (chkCol == false && iCol <= 4) {
                    iCol = Number(iCol) + 1;
                    $('#pCol3').html("Checking Auto Loader Column : " + iCol);
                    await delay(1000);
                    chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                    console.log('R3.2::' + chkCol);
                }
                if (chkCol == false && iCol <= 4) {
                    iCol = Number(iCol) + 1;
                    $('#pCol3').html("Checking Auto Loader Column : " + iCol);
                    await delay(1000);
                    chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                    console.log('R3.3::' + chkCol);
                }
                if (chkCol == false && iCol <= 4) {
                    iCol = Number(iCol) + 1;
                    $('#pCol3').html("Checking Auto Loader Column : " + iCol);
                    await delay(1000);
                    chkCol = await loadPLCCheckEstHeight(loaderId, reelCode, iCol);
                    console.log('R3.4::' + chkCol);
                }
                console.log('R3.10::' + iCol);

                if (chkCol == false) {
                    $('#btnRetry2').removeClass('hidden');
                } else {
                    $("#txtICol").val(iCol);
                    $("#txtHCol").val(iCol);

                    // check is column correct, else need call turn
                    // await delay(3000);
                    var realCol = await loadPLCGetCurrentColumn(loaderId);
                    if (realCol == 0) {
                        $('#btnRetry2').removeClass('hidden');
                    }
                    else {
                        if (realCol < iCol) {
                            $('#warnTurnModal').modal('toggle');
                        }
                        else {
                            var chkColFork = await loadPLCCheckColFork(loaderId, iCol);
                            if (chkColFork == false) {
                                $('#btnRetry2').removeClass('hidden');

                            }
                            else {
                                // if success then only show next button
                                $('#btnNext2').removeClass('hidden');
                                $('#btnRetry2').addClass('hidden');

                            }
                        }
                    }
                }
                return;
                // await delay(3000);
            }

            if (idx == 3) {
                if (reelCode == "") {
                    $('#pItem2').html('Item : <span class="error-message" id="err2"> Please scan Reel. </span>');
                    return;
                }
                // await delay(3000);
                var chkItem = await loadPLCCheckItem(loaderId, reelCode);
                console.log('R2::' + chkItem);
                if (chkItem == false) {
                    $('#btnRetry3').removeClass('hidden');
                } else {
                    $('#btnNext3').removeClass('hidden');
                    $('#btnRetry3').addClass('hidden');
                }
                return;
            }

            // ID = 4
            iCol = $("#txtICol").val();

            if (idx == 4) {
                //double confirm loader status -- yet finish coding
                return; 
            }

            if (idx == 5) {
                if (loaderId == "" || reelCode == "") {
                    swal.fire({
                        icon: 'error',
                        title: "Wait",
                        text: "Please start from Step 1."
                    });
                    return;
                }

                resetColorPLCForm(5);
                console.log("lodaer id", loaderId, "reelcode", reelCode, "icol", iCol );

                // await delay(1000);
                var chkAct = await loadPLCActHeight(loaderId, reelCode, iCol);
                console.log('R4::' + chkAct);
                if ($('#putModal').hasClass('show')) {
                    $('#putModal').modal('toggle');
                }

                if (chkAct == "99") {
                    // is success
                    $('#btnNext4').removeClass("hidden");
                    $('#btnRetry4').addClass("hidden");
                }
                else {
                    $('#btnRetry4').removeClass("hidden");
                }
                return;
            }

            if (idx == 6) {
                var h = $("#txtActHeight").val();
                if (loaderId == "" || reelCode == "" || h =="" || h =="0") {
                    swal.fire({
                        icon: 'error',
                        title: "Wait",
                        text: "Please start from Step 1."
                    });
                    return;
                }

                resetColorPLCForm(6);
                var chkLast = await loadPLCUpdateDB(loaderId, reelCode, iCol);
                console.log('R5::' + chkLast);
                if (chkLast == false) {
                    $('#btnRetryLast').removeClass("hidden");
                    return;
                }
                else {
                    $('#ptLast').html("STEP 5 :: DONE Finalized ");
                    await delay(3000);


                    resetColorPLCForm(3);
                    newReel();
                }
                // await delay(3000);
            }


        }

        async function loadPLCCheckLoader(loaderId) {

            var fResult = false;

            await $.ajax({
                url: "/api/PLCLoader/GetLoaderId/" + loaderId,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('1::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $('#pLoader1').html("Loader : " + result.data + ' <span class="error-message" id="err1"></span>');

                        fResult = true;
                    }
                    else {
                        $('#pLoader1').html('Loader : <span class="error-message" id="err1"> ' + result.errMessage + ' </span>');
                    }
                },
                error: function (error) {
                    $('#pLoader1').html('Loader : <span class="error-message" id="err1"> ' + error.val + ' </span>');
                }
            });

            return fResult;
        }

        async function loadPLCCheckItem(loaderId, reelCode) {

            var fResult = false;

            // step 2 : scan item
            await $.ajax({
                url: "/api/PLCLoader/VerifyItem/" + reelCode,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('2::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $('#pItem2').html("Item : " + result.data.itemCode + ' <span class="error-message" id="err2"></span>');
                        $('#pReel2').html("Reel ID : " + result.data.reelCode);
                        $('#pHeight2').html("Est. Height : " + result.data.thickness);

                        $("#txtEstHeight").val(result.data.thickness);

                        $('#txtHReelID').val(result.data.reelCode);
                        $('#txtHItem').val(result.data.itemCode);
                        $('#txtHExtH').val(result.data.thickness);

                        fResult = true;
                    }
                    else {
                        $('#pItem2').html('Item : <span class="error-message" id="err2"> ' + result.errMessage + ' </span>');
                        $('#err2').html(result.errMessage);
                    }
                },
                error: function (error) {
                    $('#pItem2').html('Item : <span class="error-message" id="err2"> ' + error.val + ' </span>');
                }
            });

            return fResult;
        }

        async function loadPLCCheckEstHeight(loaderId, reelCode, iCol) {
            var thickness = $("#txtEstHeight").val();
            // step 3 : check column height balance and change column

            var fResult = false;

            await $.ajax({
                url: "/api/PLCLoader/CheckColumnHeight/" + loaderId + "/" + iCol + "/" + thickness,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('3::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {

                        $('#pCol3').html("Auto Loader Column : " + iCol + '<span style="color:red; font-size:15px;" id="errCol3"> </span>');

                        $('#txtHColBal').val(result.data);

                        fResult = true;

                    }
                    else {
                        if (iCol < 4) {
                            $('#pCol3').html('Auto Loader Column : <span style="color:red; font-size:15px;" id="errCol3">'+ result.errMessage + ' </span>');
                        }
                        else {
                            $('#pCol3').html('Auto Loader Column : <span style="color:red; font-size:15px;" id="errCol3">All column is full. Please change loader. </span>');
                        }

                    }
                },
                error: function (error) {
                    if (iCol < 4) {
                        $('#pCol3').html('Auto Loader Column : <span style="color:red; font-size:15px;" id="errCol3">'+ error.val + ' </span>');
                    }
                    else {
                        $('#pCol3').html('Auto Loader Column : <span style="color:red; font-size:15px;" id="errCol3">All column is full. Please change loader. </span>');
                    }
                }
            });

            // console.log('3::' + fResult);
            return fResult;
        }

        async function loadPLCGetCurrentColumn(loaderId) {

            var fResult = false;

            await $.ajax({
                url: "/api/PLCLoader/GetCurrentColumn/" + loaderId,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('3.2::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        fResult = true;
                    }
                    else {
                        $('#pCol3').html("Auto Loader Column : " + result.errMessage + '<span style="color:red; font-size:15px;" id="errCol3"> </span>');
                    }
                },
                error: function (error) {
                    $('#pCol3').html("Auto Loader Column : " + error.val + '<span style="color:red; font-size:15px;" id="errCol3"> </span>');
                }
            });

            return fResult;
        }

        // // step 3.2 : call PLC to turn
        async function loadPLCTurnColumn(loaderId, iCol) {

            var fResult = false;

            await $.ajax({
                url: "/api/PLCLoader/TurnColumn/" + loaderId + "/" + iCol,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('3.3::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        fResult = true;
                    }
                    else {
                        $('#pCol3').html("Auto Loader Column : " + result.errMessage + '<span style="color:red; font-size:15px;" id="errCol3"> </span>');
                    }
                },
                error: function (error) {
                    $('#pCol3').html("Auto Loader Column : " + error.val + '<span style="color:red; font-size:15px;" id="errCol3"> </span>');
                }
            });

            return fResult;
        }

        // // step 3.3 : check column height balance and change column
        async function loadPLCCheckColFork(loaderId, iCol) {

            var fResult = false;

            await $.ajax({
                    url: "/api/PLCLoader/GetForkReady/" + loaderId + "/" + iCol,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('3.3::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $('#pFork3').html("Fork Status : Column " + iCol + ' is READY.<span style="color:red; font-size:15px;" id="errFork3"> </span>');

                        fResult = true;

                    }
                    else {
                        $('#pFork3').html('Fork Status : <span style="color:red; font-size:15px;" id="errFork3">'+ result.errMessage + ' </span>');
                    }
                },
                error: function (error) {
                    $('#pFork3').html('Auto Loader Column : <span style="color:red; font-size:15px;" id="errFork3">'+ error.val + ' </span>');
                }
            });

            // console.log('3::' + fResult);
            return fResult;
        }

        // // step 4 : get actual height balance
        async function loadPLCActHeight(loaderId, reelCode, iCol) {

            var fResult = 0;

            await $.ajax({
                url: "/api/PLCLoader/GetReelActualHeight/" + loaderId + "/" + iCol,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('4::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $("#txtActHeight").val(result.data[1]);
                        $('#pLoader4').html("Auto Loader Column : " + iCol + ' <span style="color:red; font-size:15px;" id="err4"> </span>');
                        $('#pHeight4').html("Actual Height : " + result.data[1]);

                        $('#txtHActH').val(result.data[1]);

                        fResult = 99;
                    }
                    else {
                        fResult = result.data[0];
                        if (result.data[0] == "1") {
                            $('#pLoader4').html("Auto Loader Column : " + iCol + ' - <span style="color:red; font-size:15px;" id="err4">' + result.errMessage + '</span>');
                            $('#pHeight4').html("Actual Height : " + result.data[1]);
                        }
                        else {
                            if (iCol < 4) {
                                $('#pCol3').html("Auto Loader Column : " + (Number(iCol) + 1));
                                $('#pLoader4').html("Auto Loader Column : " + iCol + ' - <span style="color:red; font-size:15px;" id="err4">' + result.errMessage + '</span>');
                                $('#pHeight4').html("Actual Height : " + result.data[1]);

                                $("#txtICol").val(Number(iCol) + 1);
                                $('#txtHCol').val(Number(iCol) + 1);
                                $("#warnTurnModal").modal("toggle");
                            }
                            else {
                                $('#pLoader4').html("Auto Loader Column : " + iCol + ' - <span style="color:red; font-size:15px;" id="err4">All column is full, please change auto loader. </span>');
                                $('#pHeight4').html("Actual Height : " + result.data[1]);
                            }
                        }
                    }
                },
                error: function (error) {
                    $('#pLoader4').html("Auto Loader Column : " + iCol + '<span style="color:red; font-size:15px;" id="err4">' + error.val + '</span>');
                    $('#pHeight4').html("Actual Height : ");
                }
            });

            return fResult;
        }

        async function loadPLCUpdateDB(loaderId, reelCode, iCol) {
            var actHeight = $("#txtActHeight").val();
            // console.log('5::' + actHeight);

            // step 5 : Save data
            $.ajax({
                url: "/api/PLCLoader/UpdateReelIntoLoader/" + loaderId + "/" + iCol + "/" + reelCode + "/" + actHeight,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('5::' + JSON.stringify(result));
                    // swal.close();
                    if (result.success == true) {
                        $('#pTextLast').html("ALL DONE. Will continue next item after 2 seconds...");

                        // update balance height
                        $('#txtHColBal').val(result.data);

                        // continue new Item
                    }
                    else {
                        $('#pTextLast').html('<span style="color:red; font-size:15px;">' + result.errMessage+ '</span>');
                    }
                },
                error: function (error) {
                    $('#pTextLast').html('<span style="color:red; font-size:15px;">' + error.val + '</span>');
                }
            });

            return true;
        }

        async function endTask() {
            var loaderId = $("#txtLoaderId").val();
            if (loaderId == "") {
                swal.fire({
                    icon: 'error',
                    title: "Wait",
                    text: "No loader is selected."
                });
                return;
            }

            var chkEnd = await loadPLCEndTask(loaderId);
            console.log('R10::' + chkEnd);
            return;
        }

        async function loadPLCEndTask(loaderId) {
            $.ajax({
                url: "/api/PLCLoader/EndTask/" + loaderId,
                type: "GET",
                dataType: 'JSON',
                // data: JSON.stringify(jsonInput),
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {

                },
                success: function (result) {
                    console.log('10::' + JSON.stringify(result));
                    if (result.success == true) {
                        swal.fire({
                            icon: 'success',
                            title: "Success End Task",
                            text: "",
                            didClose: () => {
                                window.location.reload();
                            }
                        });
                    }
                    else {
                        swal.fire({
                            icon: 'error',
                            title: "Wait",
                            text: result.errMessage
                        });
                    }
                },
                error: function (error) {
                    swal.fire({
                        icon: 'error',
                        title: "Wait",
                        text: error.val
                    });
                }
            });

            return true;
        }

    </script>
}
